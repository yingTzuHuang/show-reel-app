{"ast":null,"code":"var _jsxFileName = \"/Users/sagarerin/Documents/GitHub/show-reel-app/src/components/Duration/TotalDuration.js\";\nimport React from \"react\";\nimport TimeCode from \"./TimeCode\"; //Todo: Extract standard condition handling outside this file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getVideoDuration = (video, standard) => {\n  const framePerSecond = standard === \"PAL\" ? 25 : 30; //Todo: Calculate duration per video\n  //Get video standard, start timecode & end timecode\n  //Split timcodes\n\n  const startTimeCodeArr = video.startTimeCode.toString().split(\":\"); //Convert ff to milliseconds = ff * (25fpx or 30 fps) * 40ms)\n  //end timecode - start time code\n  //return final duration in milliseconds\n\n  return 0;\n};\n\nconst TotalDuration = props => {\n  let totalDuration = 0;\n  props.videos.forEach(video => {\n    totalDuration += getVideoDuration(video, props.standard);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Total Duration:\", /*#__PURE__*/_jsxDEV(TimeCode, {\n      duration: totalDuration,\n      standard: props.standard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TotalDuration;\nexport default TotalDuration;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalDuration\");","map":{"version":3,"sources":["/Users/sagarerin/Documents/GitHub/show-reel-app/src/components/Duration/TotalDuration.js"],"names":["React","TimeCode","getVideoDuration","video","standard","framePerSecond","startTimeCodeArr","startTimeCode","toString","split","TotalDuration","props","totalDuration","videos","forEach"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;;;AACA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,QAAMC,cAAc,GAAGD,QAAQ,KAAK,KAAb,GAAqB,EAArB,GAA0B,EAAjD,CAD4C,CAE5C;AACA;AACA;;AACA,QAAME,gBAAgB,GAAGH,KAAK,CAACI,aAAN,CAAoBC,QAApB,GAA+BC,KAA/B,CAAqC,GAArC,CAAzB,CAL4C,CAO5C;AACA;AACA;;AACA,SAAO,CAAP;AACD,CAXD;;AAaA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,MAAIC,aAAa,GAAG,CAApB;AAEAD,EAAAA,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAsBX,KAAD,IAAW;AAC9BS,IAAAA,aAAa,IAAIV,gBAAgB,CAACC,KAAD,EAAQQ,KAAK,CAACP,QAAd,CAAjC;AACD,GAFD;AAIA,sBACE;AAAA,+CAEG,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEQ,aAApB;AAAmC,MAAA,QAAQ,EAAED,KAAK,CAACP;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAbD;;KAAMM,a;AAeN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport TimeCode from \"./TimeCode\";\n\n//Todo: Extract standard condition handling outside this file\nconst getVideoDuration = (video, standard) => {\n  const framePerSecond = standard === \"PAL\" ? 25 : 30;\n  //Todo: Calculate duration per video\n  //Get video standard, start timecode & end timecode\n  //Split timcodes\n  const startTimeCodeArr = video.startTimeCode.toString().split(\":\");\n\n  //Convert ff to milliseconds = ff * (25fpx or 30 fps) * 40ms)\n  //end timecode - start time code\n  //return final duration in milliseconds\n  return 0;\n};\n\nconst TotalDuration = (props) => {\n  let totalDuration = 0;\n\n  props.videos.forEach((video) => {\n    totalDuration += getVideoDuration(video, props.standard);\n  });\n\n  return (\n    <div>\n      Total Duration:\n      {<TimeCode duration={totalDuration} standard={props.standard} />}\n    </div>\n  );\n};\n\nexport default TotalDuration;\n"]},"metadata":{},"sourceType":"module"}