{"ast":null,"code":"var _jsxFileName = \"/Users/sagarerin/Documents/GitHub/show-reel-app/src/components/Reels/TotalDuration.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TotalDuration = props => {\n  //const [durationText, setDurationText] = useState(\"\");\n  //const calculatedDuration = getDurationText(props.videos);\n  //setDurationText(calculatedDuration);\n  const getVideoDuration = video => {\n    //Todo: Calculate duration per video\n    //Get video standard, start timecode & end timecode\n    //Split timcodes\n    //Convert ff to milliseconds = ff * (25fpx or 30 fps) * 40ms)\n    //end timecode - start time code\n    //return final duration in milliseconds\n    return 0;\n  };\n\n  const getDurationText = videos => {\n    let totalDuration = 0;\n    videos.forEach(video => {\n      totalDuration += getVideoDuration(video);\n    });\n    const totalDurationText = \"\"; //Todo: convert duration from milliseconds to format HH:MM:ss:ff\n\n    return totalDurationText;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Total Duration: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: getDurationText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TotalDuration;\nexport default TotalDuration;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalDuration\");","map":{"version":3,"sources":["/Users/sagarerin/Documents/GitHub/show-reel-app/src/components/Reels/TotalDuration.js"],"names":["React","TotalDuration","props","getVideoDuration","video","getDurationText","videos","totalDuration","forEach","totalDurationText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B;AAEA;AAEA;AAEA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,WAAO,CAAP;AACD,GARD;;AAUA,QAAMC,eAAe,GAAIC,MAAD,IAAY;AAClC,QAAIC,aAAa,GAAG,CAApB;AAEAD,IAAAA,MAAM,CAACE,OAAP,CAAgBJ,KAAD,IAAW;AACxBG,MAAAA,aAAa,IAAIJ,gBAAgB,CAACC,KAAD,CAAjC;AACD,KAFD;AAIA,UAAMK,iBAAiB,GAAG,EAA1B,CAPkC,CAQlC;;AAEA,WAAOA,iBAAP;AACD,GAXD;;AAYA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIJ;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAnCD;;KAAMJ,a;AAqCN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\n\nconst TotalDuration = (props) => {\n  //const [durationText, setDurationText] = useState(\"\");\n\n  //const calculatedDuration = getDurationText(props.videos);\n\n  //setDurationText(calculatedDuration);\n\n  const getVideoDuration = (video) => {\n    //Todo: Calculate duration per video\n    //Get video standard, start timecode & end timecode\n    //Split timcodes\n    //Convert ff to milliseconds = ff * (25fpx or 30 fps) * 40ms)\n    //end timecode - start time code\n    //return final duration in milliseconds\n    return 0;\n  };\n\n  const getDurationText = (videos) => {\n    let totalDuration = 0;\n\n    videos.forEach((video) => {\n      totalDuration += getVideoDuration(video);\n    });\n\n    const totalDurationText = \"\";\n    //Todo: convert duration from milliseconds to format HH:MM:ss:ff\n\n    return totalDurationText;\n  };\n  return (\n    <div>\n      <label>Total Duration: </label>\n      <p>{getDurationText}</p>\n    </div>\n  );\n};\n\nexport default TotalDuration;\n"]},"metadata":{},"sourceType":"module"}