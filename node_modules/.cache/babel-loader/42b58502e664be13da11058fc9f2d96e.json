{"ast":null,"code":"var _jsxFileName = \"/Users/sagarerin/Documents/GitHub/show-reel-app/src/components/Reels/Reels.js\";\nimport { Fragment } from \"react\";\nimport React from \"react\";\nimport ReelItem from \"./ReelItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reels = props => {\n  const selectReelHandler = selectedReel => {\n    props.onSelectReel(selectedReel);\n  };\n\n  const reelVideos = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: props.items.map(reel => {\n      return /*#__PURE__*/_jsxDEV(ReelItem, {\n        source: reel,\n        videos: props.videos,\n        onSelectReel: selectReelHandler\n      }, reel.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Reels;\nexport default Reels;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reels\");","map":{"version":3,"sources":["/Users/sagarerin/Documents/GitHub/show-reel-app/src/components/Reels/Reels.js"],"names":["Fragment","React","ReelItem","Reels","props","selectReelHandler","selectedReel","onSelectReel","reelVideos","items","map","reel","videos","name"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,iBAAiB,GAAIC,YAAD,IAAkB;AAC1CF,IAAAA,KAAK,CAACG,YAAN,CAAmBD,YAAnB;AACD,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM,CAAE,CAA3B;;AAEA,sBACE,QAAC,QAAD;AAAA,cACGJ,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AACzB,0BACE,QAAC,QAAD;AAEE,QAAA,MAAM,EAAEA,IAFV;AAGE,QAAA,MAAM,EAAEP,KAAK,CAACQ,MAHhB;AAIE,QAAA,YAAY,EAAEP;AAJhB,SACOM,IAAI,CAACE,IADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArBD;;KAAMV,K;AAuBN,eAAeA,KAAf","sourcesContent":["import { Fragment } from \"react\";\nimport React from \"react\";\nimport ReelItem from \"./ReelItem\";\n\nconst Reels = (props) => {\n  const selectReelHandler = (selectedReel) => {\n    props.onSelectReel(selectedReel);\n  };\n\n  const reelVideos = () => {};\n\n  return (\n    <Fragment>\n      {props.items.map((reel) => {\n        return (\n          <ReelItem\n            key={reel.name}\n            source={reel}\n            videos={props.videos}\n            onSelectReel={selectReelHandler}\n          />\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default Reels;\n"]},"metadata":{},"sourceType":"module"}