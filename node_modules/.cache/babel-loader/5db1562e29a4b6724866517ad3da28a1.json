{"ast":null,"code":"var _jsxFileName = \"/Users/sagarerin/Documents/GitHub/show-reel-app/src/pages/AllReels.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport React from \"react\";\nimport Reels from \"../components/Reels/Reels\";\nimport Videos from \"../components/Videos/Videos\"; // Todo: Apply styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllReels = props => {\n  _s();\n\n  const [filteredVideos, setFilteredVideos] = useState([]);\n\n  const selectReelHandler = selectedReel => {\n    //Todo: set filteredVideos based on selected reel\n    const reelVideos = [];\n    props.videos.forEach(video => {\n      if (selectedReel.videoIds.includes(video.id)) {\n        reelVideos = [...reelVideos, video];\n      }\n    });\n    setFilteredVideos(reelVideos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Reels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), props.reels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Reels, {\n        items: props.reels,\n        onSelectReel: selectReelHandler,\n        videos: filteredVideos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [filteredVideos.length > 0 && /*#__PURE__*/_jsxDEV(Videos, {\n        items: filteredVideos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 39\n      }, this), filteredVideos.length <= 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The reels doesn't contain any videos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllReels, \"bA/Nuke7fOTpQ3rQXI7r8HS7zh4=\");\n\n_c = AllReels;\nexport default AllReels;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllReels\");","map":{"version":3,"sources":["/Users/sagarerin/Documents/GitHub/show-reel-app/src/pages/AllReels.js"],"names":["Fragment","useState","React","Reels","Videos","AllReels","props","filteredVideos","setFilteredVideos","selectReelHandler","selectedReel","reelVideos","videos","forEach","video","videoIds","includes","id","reels","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMQ,iBAAiB,GAAIC,YAAD,IAAkB;AAC1C;AACA,UAAMC,UAAU,GAAG,EAAnB;AACAL,IAAAA,KAAK,CAACM,MAAN,CAAaC,OAAb,CAAsBC,KAAD,IAAW;AAC9B,UAAIJ,YAAY,CAACK,QAAb,CAAsBC,QAAtB,CAA+BF,KAAK,CAACG,EAArC,CAAJ,EAA8C;AAC5CN,QAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgBG,KAAhB,CAAb;AACD;AACF,KAJD;AAKAN,IAAAA,iBAAiB,CAACG,UAAD,CAAjB;AACD,GATD;;AAWA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,KAAK,CAACY,KAAN,CAAYC,MAAZ,GAAqB,CAArB,iBACC;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAEb,KAAK,CAACY,KADf;AAEE,QAAA,YAAY,EAAET,iBAFhB;AAGE,QAAA,MAAM,EAAEF;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,eAWE;AAAA,iBACGA,cAAc,CAACY,MAAf,GAAwB,CAAxB,iBAA6B,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEZ;AAAf;AAAA;AAAA;AAAA;AAAA,cADhC,EAEGA,cAAc,CAACY,MAAf,IAAyB,CAAzB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAlCD;;GAAMd,Q;;KAAAA,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import { Fragment, useState } from \"react\";\nimport React from \"react\";\nimport Reels from \"../components/Reels/Reels\";\nimport Videos from \"../components/Videos/Videos\";\n\n// Todo: Apply styles\nconst AllReels = (props) => {\n  const [filteredVideos, setFilteredVideos] = useState([]);\n\n  const selectReelHandler = (selectedReel) => {\n    //Todo: set filteredVideos based on selected reel\n    const reelVideos = [];\n    props.videos.forEach((video) => {\n      if (selectedReel.videoIds.includes(video.id)) {\n        reelVideos = [...reelVideos, video];\n      }\n    });\n    setFilteredVideos(reelVideos);\n  };\n\n  return (\n    <Fragment>\n      <h1>All Reels</h1>\n      {props.reels.length > 0 && (\n        <div>\n          <Reels\n            items={props.reels}\n            onSelectReel={selectReelHandler}\n            videos={filteredVideos}\n          />\n        </div>\n      )}\n      <div>\n        {filteredVideos.length > 0 && <Videos items={filteredVideos} />}\n        {filteredVideos.length <= 0 && (\n          <p>The reels doesn't contain any videos.</p>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AllReels;\n"]},"metadata":{},"sourceType":"module"}