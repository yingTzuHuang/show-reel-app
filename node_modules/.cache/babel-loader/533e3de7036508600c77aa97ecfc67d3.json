{"ast":null,"code":"var _jsxFileName = \"/Users/sagarerin/Documents/GitHub/show-reel-app/src/pages/AllReels.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport React from \"react\";\nimport Reels from \"../components/Reels/Reels\";\nimport Videos from \"../components/Videos/Videos\"; // Todo: Apply styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllReels = props => {\n  _s();\n\n  const [reels, setReels] = useState(props.reels);\n  const [filteredVideos, setFilteredVideos] = useState(props.videos);\n  console.log(props.reels);\n  console.log(\"reels:\");\n  console.log(reels);\n\n  const selectReelHandler = selectedReel => {//Todo: set filteredVideos based on selected reel\n  };\n\n  console.log(\"AllReels\");\n  console.log(filteredVideos);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Reels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), reels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Reels, {\n        items: reels,\n        onSelectReel: selectReelHandler,\n        videos: filteredVideos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Videos, {\n        items: filteredVideos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllReels, \"BCIp2jxbwrQksFXHYpyThpyFr7w=\");\n\n_c = AllReels;\nexport default AllReels;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllReels\");","map":{"version":3,"sources":["/Users/sagarerin/Documents/GitHub/show-reel-app/src/pages/AllReels.js"],"names":["Fragment","useState","React","Reels","Videos","AllReels","props","reels","setReels","filteredVideos","setFilteredVideos","videos","console","log","selectReelHandler","selectedReel","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAACK,KAAK,CAACK,MAAP,CAApD;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACC,KAAlB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;;AACA,QAAMO,iBAAiB,GAAIC,YAAD,IAAkB,CAC1C;AACD,GAFD;;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAAK,CAACS,MAAN,GAAe,CAAf,iBACC;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAET,KADT;AAEE,QAAA,YAAY,EAAEO,iBAFhB;AAGE,QAAA,MAAM,EAAEL;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,eAWE;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA7BD;;GAAMJ,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import { Fragment, useState } from \"react\";\nimport React from \"react\";\nimport Reels from \"../components/Reels/Reels\";\nimport Videos from \"../components/Videos/Videos\";\n\n// Todo: Apply styles\nconst AllReels = (props) => {\n  const [reels, setReels] = useState(props.reels);\n  const [filteredVideos, setFilteredVideos] = useState(props.videos);\n\n  console.log(props.reels);\n  console.log(\"reels:\");\n  console.log(reels);\n  const selectReelHandler = (selectedReel) => {\n    //Todo: set filteredVideos based on selected reel\n  };\n  console.log(\"AllReels\");\n  console.log(filteredVideos);\n  return (\n    <Fragment>\n      <h1>All Reels</h1>\n      {reels.length > 0 && (\n        <div>\n          <Reels\n            items={reels}\n            onSelectReel={selectReelHandler}\n            videos={filteredVideos}\n          />\n        </div>\n      )}\n      <div>\n        <Videos items={filteredVideos} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AllReels;\n"]},"metadata":{},"sourceType":"module"}