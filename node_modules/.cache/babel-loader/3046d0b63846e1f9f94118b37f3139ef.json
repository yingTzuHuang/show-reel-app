{"ast":null,"code":"var _jsxFileName = \"/Users/sagarerin/Documents/GitHub/show-reel-app/src/pages/AllReels.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport React from \"react\";\nimport Reels from \"../components/Reels/Reels\";\nimport Videos from \"../components/Videos/Videos\"; // Todo: Apply styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllReels = props => {\n  _s();\n\n  const [filteredVideos, setFilteredVideos] = useState(props.videos);\n\n  const displayReelVideosHandler = selectedReel => {\n    let reelVideos = [];\n    props.videos.forEach(video => {\n      if (selectedReel.videoIds.includes(video.id)) {\n        reelVideos = [...reelVideos, video];\n      }\n    });\n    setFilteredVideos(reelVideos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Reels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), props.reels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Reels, {\n        items: props.reels,\n        onSelectReel: displayReelVideosHandler,\n        videos: filteredVideos,\n        onChangeReelVideos: displayReelVideosHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Videos, {\n        items: filteredVideos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllReels, \"W0vNsmQUL9crQIaqgLB8YQPXiGs=\");\n\n_c = AllReels;\nexport default AllReels;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllReels\");","map":{"version":3,"sources":["/Users/sagarerin/Documents/GitHub/show-reel-app/src/pages/AllReels.js"],"names":["Fragment","useState","React","Reels","Videos","AllReels","props","filteredVideos","setFilteredVideos","videos","displayReelVideosHandler","selectedReel","reelVideos","forEach","video","videoIds","includes","id","reels","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAACK,KAAK,CAACG,MAAP,CAApD;;AAEA,QAAMC,wBAAwB,GAAIC,YAAD,IAAkB;AACjD,QAAIC,UAAU,GAAG,EAAjB;AACAN,IAAAA,KAAK,CAACG,MAAN,CAAaI,OAAb,CAAsBC,KAAD,IAAW;AAC9B,UAAIH,YAAY,CAACI,QAAb,CAAsBC,QAAtB,CAA+BF,KAAK,CAACG,EAArC,CAAJ,EAA8C;AAC5CL,QAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgBE,KAAhB,CAAb;AACD;AACF,KAJD;AAKAN,IAAAA,iBAAiB,CAACI,UAAD,CAAjB;AACD,GARD;;AAUA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,KAAK,CAACY,KAAN,CAAYC,MAAZ,GAAqB,CAArB,iBACC;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAEb,KAAK,CAACY,KADf;AAEE,QAAA,YAAY,EAAER,wBAFhB;AAGE,QAAA,MAAM,EAAEH,cAHV;AAIE,QAAA,kBAAkB,EAAEG;AAJtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,eAYE;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEH;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA/BD;;GAAMF,Q;;KAAAA,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import { Fragment, useState } from \"react\";\nimport React from \"react\";\nimport Reels from \"../components/Reels/Reels\";\nimport Videos from \"../components/Videos/Videos\";\n\n// Todo: Apply styles\nconst AllReels = (props) => {\n  const [filteredVideos, setFilteredVideos] = useState(props.videos);\n\n  const displayReelVideosHandler = (selectedReel) => {\n    let reelVideos = [];\n    props.videos.forEach((video) => {\n      if (selectedReel.videoIds.includes(video.id)) {\n        reelVideos = [...reelVideos, video];\n      }\n    });\n    setFilteredVideos(reelVideos);\n  };\n\n  return (\n    <Fragment>\n      <h1>All Reels</h1>\n      {props.reels.length > 0 && (\n        <div>\n          <Reels\n            items={props.reels}\n            onSelectReel={displayReelVideosHandler}\n            videos={filteredVideos}\n            onChangeReelVideos={displayReelVideosHandler}\n          />\n        </div>\n      )}\n      <div>\n        <Videos items={filteredVideos} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AllReels;\n"]},"metadata":{},"sourceType":"module"}