{"ast":null,"code":"var _jsxFileName = \"/Users/sagarerin/Documents/GitHub/show-reel-app/src/pages/AllReels.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport React from \"react\";\nimport Reels from \"../components/Reels/Reels\";\nimport Videos from \"../components/Videos/Videos\";\nimport NewReel from \"./NewReel\"; //Todo: get items for reels from App (server/storage)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet reels = []; // Todo: Apply styles\n\nconst AllReels = props => {\n  _s();\n\n  const [filteredVideos, setFilteredVideos] = useState([]);\n  const [reelItems, setReelItems] = useState(reels);\n\n  const addNewReelHandler = newReel => {\n    const reelData = { ...newReel,\n      //Todo: Consider to use other way to generate id\n      id: Math.random().toString(),\n      videoIds: []\n    }; // Change items of reels\n\n    setReelItems(previousReels => {\n      return [reelData, ...previousReels];\n    });\n  };\n\n  const displayReelVideosHandler = selectedReel => {\n    let reelVideos = [];\n    props.videos.forEach(video => {\n      if (selectedReel.videoIds.includes(video.id)) {\n        reelVideos = [...reelVideos, video];\n      }\n    });\n    setFilteredVideos(reelVideos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewReel, {\n      onAddNewReel: addNewReelHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Reels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), reelItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Reels, {\n        items: reelItems,\n        onSelectReel: displayReelVideosHandler,\n        videos: props.videos,\n        onChangeReelVideos: displayReelVideosHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Videos, {\n        items: filteredVideos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllReels, \"NY3RKyS4WvijpSjnaP2GN9FiZdg=\");\n\n_c = AllReels;\nexport default AllReels;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllReels\");","map":{"version":3,"sources":["/Users/sagarerin/Documents/GitHub/show-reel-app/src/pages/AllReels.js"],"names":["Fragment","useState","React","Reels","Videos","NewReel","reels","AllReels","props","filteredVideos","setFilteredVideos","reelItems","setReelItems","addNewReelHandler","newReel","reelData","id","Math","random","toString","videoIds","previousReels","displayReelVideosHandler","selectedReel","reelVideos","videos","forEach","video","includes","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;;AACA,IAAIC,KAAK,GAAG,EAAZ,C,CAEA;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAACK,KAAD,CAA1C;;AACA,QAAMO,iBAAiB,GAAIC,OAAD,IAAa;AACrC,UAAMC,QAAQ,GAAG,EACf,GAAGD,OADY;AAEf;AACAE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAHW;AAIfC,MAAAA,QAAQ,EAAE;AAJK,KAAjB,CADqC,CAOrC;;AACAR,IAAAA,YAAY,CAAES,aAAD,IAAmB;AAC9B,aAAO,CAACN,QAAD,EAAW,GAAGM,aAAd,CAAP;AACD,KAFW,CAAZ;AAGD,GAXD;;AAYA,QAAMC,wBAAwB,GAAIC,YAAD,IAAkB;AACjD,QAAIC,UAAU,GAAG,EAAjB;AACAhB,IAAAA,KAAK,CAACiB,MAAN,CAAaC,OAAb,CAAsBC,KAAD,IAAW;AAC9B,UAAIJ,YAAY,CAACH,QAAb,CAAsBQ,QAAtB,CAA+BD,KAAK,CAACX,EAArC,CAAJ,EAA8C;AAC5CQ,QAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgBG,KAAhB,CAAb;AACD;AACF,KAJD;AAKAjB,IAAAA,iBAAiB,CAACc,UAAD,CAAjB;AACD,GARD;;AAUA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,YAAY,EAAEX;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,SAAS,CAACkB,MAAV,GAAmB,CAAnB,iBACC;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAElB,SADT;AAEE,QAAA,YAAY,EAAEW,wBAFhB;AAGE,QAAA,MAAM,EAAEd,KAAK,CAACiB,MAHhB;AAIE,QAAA,kBAAkB,EAAEH;AAJtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJJ,eAaE;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEb;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA5CD;;GAAMF,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import { Fragment, useState } from \"react\";\nimport React from \"react\";\nimport Reels from \"../components/Reels/Reels\";\nimport Videos from \"../components/Videos/Videos\";\nimport NewReel from \"./NewReel\";\n\n//Todo: get items for reels from App (server/storage)\nlet reels = [];\n\n// Todo: Apply styles\nconst AllReels = (props) => {\n  const [filteredVideos, setFilteredVideos] = useState([]);\n  const [reelItems, setReelItems] = useState(reels);\n  const addNewReelHandler = (newReel) => {\n    const reelData = {\n      ...newReel,\n      //Todo: Consider to use other way to generate id\n      id: Math.random().toString(),\n      videoIds: [],\n    };\n    // Change items of reels\n    setReelItems((previousReels) => {\n      return [reelData, ...previousReels];\n    });\n  };\n  const displayReelVideosHandler = (selectedReel) => {\n    let reelVideos = [];\n    props.videos.forEach((video) => {\n      if (selectedReel.videoIds.includes(video.id)) {\n        reelVideos = [...reelVideos, video];\n      }\n    });\n    setFilteredVideos(reelVideos);\n  };\n\n  return (\n    <Fragment>\n      <NewReel onAddNewReel={addNewReelHandler} />\n      <h1>All Reels</h1>\n      {reelItems.length > 0 && (\n        <div>\n          <Reels\n            items={reelItems}\n            onSelectReel={displayReelVideosHandler}\n            videos={props.videos}\n            onChangeReelVideos={displayReelVideosHandler}\n          />\n        </div>\n      )}\n      <div>\n        <Videos items={filteredVideos} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AllReels;\n"]},"metadata":{},"sourceType":"module"}